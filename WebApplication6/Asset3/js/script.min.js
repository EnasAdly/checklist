const signUpButton = document.getElementById("signUp"),
    signInButton = document.getElementById("signIn"),
    container = document.getElementById("container");
signUpButton.addEventListener
    ("click", (() =>
    { container.classList.add("right-panel-active") })),
    signInButton.addEventListener
        ("click", (() =>
        {
            container.classList.remove("right-panel-active")
        })),
    $(document).ready((function () {
        $("body").on("click", ".container div h3",
            (function () { $(this).children("span").hasClass("close") ? $(this).children("span").removeClass("close") : $(this).children("span").addClass("close"), $(this).parent().children("p").slideToggle(250) }))
    })),
    $(document).ready((function () {
        $(".add-row").click((function () {
            $("#name").val(), $("#email").val();
            $(".kot-table tbody").append("<tr><td class='text-center w-3x pt-2'><input type='checkbox' /></td><td><div class='form-group mb-1'><select class='custom-select custom-select-sm tbl-wfx kot-table font-sm'><option value='1' selected>-- Select Product --</option><option value='1'>Cheese Burger</option><option value='2'>Cheese Pizza</option></select></div></td><td class='w-10x'><div class='form-group mb-1'><input class='form-control form-control-sm font-sm' type='number' step='1' min='1' /></div></td><td class='w-10x'><div class='form-group mb-1'><select class='custom-select custom-select-sm font-sm'><option value selected>select</option><option value>FULL</option><option value>HALF</option></select></div></td><td class='w-10x'><div class='form-group mb-1'><input class='form-control form-control-sm font-sm' type='text' /></div></td><td class='w-10x'><div class='form-group mb-1'><input class='form-control form-control-sm font-sm' type='text' /></div></td></tr>")
        })), $(".delete-row").click((function () { $(".kot-table tbody").find('input[name="record"]').each((function () { $(this).is(":checked") && $(this).parents("tr").remove() })) }))
    })),
    $(document).ready((function () {
        $(".dynamic-table").each((function () {
            div = $(this), div.data("rows", 0), div.find(".dynamic-table-add_row").click((function () { var e = div.data("rows"); e++, row = div.find(".dynamic-table-addr" + e), row.html("<td>" + e + "</td>" + div.find(".dynamic-table-addr0").html()), row.find(".datetimepicker").datetimepicker(), div.find(".dynamic-table-tab_logic").append('<tr class="dynamic-table-addr' + (e + 1) + '"></tr>'), div.data("rows", e) })), div.find(".dynamic-table-delete_row").click((function () { var e = div.data("rows"); e > 0 && (div.find(".dynamic-table-addr" + e).html(""), div.find(".dynamic-table-addr" + (e + 1)).remove(), e--, div.data("rows", e)) })), div.find(".dynamic-table-add_row").trigger("click")
        }))
    }));
"use strict"; function ripplesEffect(e)
{ var t, i, l, o; 0 === $(this).find(".waves").length && $(this).prepend('<span class="waves"></span>'), (t = $(this).find(".waves")).removeClass("ripple"), t.height() || t.width() || (i = Math.max($(this).outerWidth(), $(this).outerHeight()), t.css({ height: i, width: i })), l = e.pageX - $(this).offset().left - t.width() / 2, o = e.pageY - $(this).offset().top - t.height() / 2, t.css({ top: o + "px", left: l + "px" }).addClass("ripple") } $(document).ready((function () { $(".btnMaterial, .ripples").on("click", ripplesEffect) })), $((function () { var e = 100, t = document.getElementById("ipi-table"); $("#zoom_in").click((function (i) { e += 10, "string" == typeof t.style.MozTransform ? t.style.MozTransform = "scale(" + e / 100 + ")" : "string" == typeof t.style.zoom && (t.style.zoom = e + "%") })), $("#zoom_out").click((function (i) { e -= 10, "string" == typeof t.style.MozTransform ? t.style.MozTransform = "scale(" + e / 100 + ")" : "string" == typeof t.style.zoom && (t.style.zoom = e + "%") })), $("#ipi-table").tablesorter({ theme: "bootstrap", widthFixed: !0, widgets: ["filter", "columns", "zebra"], ignoreCase: !1, widgetOptions: { zebra: ["even", "odd"], columns: ["primary", "secondary", "tertiary"], filter_childRows: !1, filter_childByColumn: !1, filter_childWithSibs: !0, filter_columnFilters: !0, filter_columnAnyMatch: !0, filter_cellFilter: "", filter_cssFilter: "", filter_defaultFilter: {}, filter_excludeFilter: {}, filter_external: "", filter_filteredRow: "filtered", filter_filterLabel: 'Filter "{{label}}" column by...', filter_formatter: null, filter_functions: null, filter_hideEmpty: !0, filter_hideFilters: !1, filter_ignoreCase: !0, filter_liveSearch: !0, filter_matchType: { input: "exact", select: "exact" }, filter_onlyAvail: "filter-onlyAvail", filter_placeholder: { search: "", select: "" }, filter_reset: "button.reset", filter_resetOnEsc: !0, filter_saveFilters: !0, filter_searchDelay: 300, filter_searchFiltered: !0, filter_selectSource: null, filter_serversideFiltering: !1, filter_startsWith: !1, filter_useParsedData: !1, filter_defaultAttrib: "data-value", filter_selectSourceSeparator: "|" } }), $(".resetsaved").click((function () { $("#ipi-table").trigger("filterResetSaved"); var e = $('<span class="results"> Reset</span>').insertAfter(this); return setTimeout((function () { e.remove() }), 500), !1 })), $("button[data-filter-column]").click((function () { var e = [], t = $(this), i = t.data("filter-column"), l = t.data("filter-text") || t.text(); return e[i] = l, $.tablesorter.setFilters($("#table"), e, !0), !1 })), $("table").bind("filterEnd", (function (e, t) { var i = document.getElementById("rowCount"); if (void 0 !== i) { var l = document.createTextNode(t.filteredRows); jQuery("#rowCount").html(""), i.appendChild(l) } })) })), function () { var e = document.querySelector(".sidebar"), t = document.querySelectorAll("#sidebarToggle, #sidebarToggleTop"); if (e) { e.querySelector(".collapse"); var i = [].slice.call(document.querySelectorAll(".sidebar .collapse")).map((function (e) { return new bootstrap.Collapse(e, { toggle: !1 }) })); for (var l of t) l.addEventListener("click", (function (t) { if (document.body.classList.toggle("sidebar-toggled"), e.classList.toggle("toggled"), e.classList.contains("toggled")) for (var l of i) l.hide() })); window.addEventListener("resize", (function () { if (Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) < 768) for (var e of i) e.hide() })) } var o = document.querySelector("body.fixed-nav .sidebar"); o && o.on("mousewheel DOMMouseScroll wheel", (function (e) { if (Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) > 768) { var t = e.originalEvent, i = t.wheelDelta || -t.detail; this.scrollTop += 30 * (i < 0 ? 1 : -1), e.preventDefault() } })); var r = document.querySelector(".scroll-to-top"); r && window.addEventListener("scroll", (function () { var e = window.pageYOffset; r.style.display = e > 100 ? "block" : "none" })) }();